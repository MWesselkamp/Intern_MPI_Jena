#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri May 14 14:34:57 2021

@author: Marieke_Wesselkamp
"""
import random 
import preprocessing
import training
import numpy as np
import pandas as pd
#%%
X, Y, Y_Preles = preprocessing.preprocessing()
X_P1 , Y_P1, Y_Preles_P1 = preprocessing.split_data(X, Y, Y_Preles,
                                                    years = [2000])
#%%

def searchspace(input_size, output_size, gridsize,
                max_layers = 3):
    grid = []
    for i in range(gridsize):
        layersizes = [input_size]
        nlayers = random.randint(1,max_layers)
        for i in range(nlayers):
            size = random.choice([4,8,16,32])
            layersizes.append(size)
        layersizes.append(output_size)
        if layersizes not in grid:
            grid.append(layersizes)
    return grid

grid = searchspace(7,1,20)

#%%
hparams = {"epochs":400,
           "batchsize":16,
           "learningrate":0.01,
           "history":1}

mae_train = []
mae_val = []

for i in range(len(grid)):
    model_design = {"layer_sizes":grid[i]}
    running_losses = training.train(hparams, model_design, X_P1.to_numpy(), Y_P1.to_numpy(), "randomsearch")  
    mae_train.append(np.mean(np.transpose(running_losses["mae_train"])[-1]))
    mae_val.append(np.mean(np.transpose(running_losses["mae_val"])[-1]))
    print(f"fitted model {i}")
    
#%%
df = pd.DataFrame(grid)
df["mae_train"] = mae_train
df["mae_val"] = mae_val
